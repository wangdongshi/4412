diff -ruN u-boot-2018.07/arch/arm/dts/exynos4412-x4412.dts u-boot-x4412/arch/arm/dts/exynos4412-x4412.dts
--- u-boot-2018.07/arch/arm/dts/exynos4412-x4412.dts	1970-01-01 08:00:00.000000000 +0800
+++ u-boot-x4412/arch/arm/dts/exynos4412-x4412.dts	2018-09-26 06:16:47.106004000 +0800
@@ -0,0 +1,252 @@
+// SPDX-License-Identifier: GPL-2.0+
+/*
+ * Odroid-U3/X2 board device tree source
+ *
+ * Copyright (c) 2014 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ */
+
+/dts-v1/;
+#include "exynos4412.dtsi"
+
+/ {
+	model = "X4412 based on Exynos4412";
+	compatible = "samsung,x4412", "samsung,exynos4412";
+
+	aliases {
+		serial0 = "/serial@13800000";
+		console = "/serial@13810000";
+		mmc0 = &mshc_0;
+		mmc1 = &sdhci2;
+	};
+
+	serial@13810000 {
+		status = "okay";
+	};
+
+	ehci@12580000 {
+		compatible = "samsung,exynos-ehci";
+		reg = <0x12580000 0x100>;
+		#address-cells = <1>;
+		#size-cells = <1>;
+		phy {
+			compatible = "samsung,exynos-usb-phy";
+			reg = <0x125B0000 0x100>;
+		};
+	};
+
+	emmc-reset {
+		compatible = "samsung,emmc-reset";
+		reset-gpio = <&gpk1 2 0>;
+	};
+};
+
+&i2c_0 {
+	samsung,i2c-sda-delay = <100>;
+	samsung,i2c-slave-addr = <0x10>;
+	samsung,i2c-max-bus-freq = <100000>;
+	status = "okay";
+
+	max77686: max77686_pmic@09 {
+		compatible = "maxim,max77686";
+		interrupt-parent = <&gpx3>;
+		interrupts = <7 0>;
+		reg = <0x09 0 0>;
+		#clock-cells = <1>;
+
+		voltage-regulators {
+			ldo1_reg: LDO1 {
+				regulator-name = "VDD_ALIVE_1.0V";
+				regulator-min-microvolt = <1000000>;
+				regulator-max-microvolt = <1000000>;
+			};
+
+			ldo2_reg: LDO2 {
+				regulator-name = "VDDQ_VM1M2_1.2V";
+				regulator-min-microvolt = <1200000>;
+				regulator-max-microvolt = <1200000>;
+			};
+
+			ldo3_reg: LDO3 {
+				regulator-name = "VCC_1.8V_AP";
+				regulator-min-microvolt = <1800000>;
+				regulator-max-microvolt = <1800000>;
+			};
+
+			ldo4_reg: LDO4 {
+				regulator-name = "VDDQ_MMC2_2.8V";
+				regulator-min-microvolt = <2800000>;
+				regulator-max-microvolt = <2800000>;
+			};
+
+			ldo5_reg: LDO5 {
+				regulator-name = "VDDQ_MMC0/1/3_1.8V";
+				regulator-min-microvolt = <1800000>;
+				regulator-max-microvolt = <1800000>;
+			};
+
+			ldo6_reg: LDO6 {
+				regulator-name = "VMPLL_1.0V";
+				regulator-min-microvolt = <1100000>;
+				regulator-max-microvolt = <1100000>;
+			};
+
+			ldo7_reg: LDO7 {
+				regulator-name = "VPLL_1.1V";
+				regulator-min-microvolt = <1100000>;
+				regulator-max-microvolt = <1100000>;
+			};
+
+			ldo8_reg: LDO8 {
+				regulator-name = "VDD_MIPI/HDMI_1.0V";
+				regulator-min-microvolt = <1000000>;
+				regulator-max-microvolt = <1000000>;
+			};
+
+			ldo10_reg: LDO10 {
+				regulator-name = "VDD_MIPI/HDMI_1.8V";
+				regulator-min-microvolt = <1800000>;
+				regulator-max-microvolt = <1800000>;
+			};
+
+			ldo11_reg: LDO11 {
+				regulator-name = "VDD_ABB1_1.8V";
+				regulator-min-microvolt = <1800000>;
+				regulator-max-microvolt = <1800000>;
+			};
+
+			ldo12_reg: LDO12 {
+				regulator-name = "VDD_UOTG_3.0V";
+				regulator-min-microvolt = <3000000>;
+				regulator-max-microvolt = <3000000>;
+			};
+
+			ldo13_reg: LDO13 {
+				regulator-name = "VDD_C2C_1.8V";
+				regulator-min-microvolt = <1800000>;
+				regulator-max-microvolt = <1800000>;
+			};
+
+			ldo14_reg: LDO14 {
+				regulator-name = "VDD_ABB02_1.8V";
+				regulator-min-microvolt = <1800000>;
+				regulator-max-microvolt = <1800000>;
+			};
+
+			ldo15_reg: LDO15 {
+				regulator-name = "VDD_HSIC/OTG_1.0V";
+				regulator-min-microvolt = <1000000>;
+				regulator-max-microvolt = <1000000>;
+			};
+
+			ldo16_reg: LDO16 {
+				regulator-name = "VDD_HSIC_1.8V";
+				regulator-min-microvolt = <1800000>;
+				regulator-max-microvolt = <1800000>;
+			};
+
+			ldo17_reg: LDO17 {
+				regulator-name = "VDDQ_CAM_1.2V";
+				regulator-min-microvolt = <1200000>;
+				regulator-max-microvolt = <1200000>;
+			};
+
+			ldo20_reg: LDO20 {
+				regulator-name = "VDDQ_EMMC_1.8V";
+				regulator-min-microvolt = <1800000>;
+				regulator-max-microvolt = <1800000>;
+				regulator-always-on;
+				regulator-boot-on;
+			};
+
+			ldo21_reg: LDO21 {
+				regulator-name = "TFLASH_2.8V";
+				regulator-min-microvolt = <2800000>;
+				regulator-max-microvolt = <2800000>;
+				regulator-always-on;
+				regulator-boot-on;
+			};
+
+			ldo22_reg: LDO22 {
+				regulator-name = "VDDQ_EMMC_2.8V";
+				regulator-min-microvolt = <2800000>;
+				regulator-max-microvolt = <2800000>;
+				regulator-always-on;
+				regulator-boot-on;
+			};
+
+			ldo25_reg: LDO25 {
+				regulator-compatible = "LDO25";
+				regulator-name = "VDDQ_LCD_3.0V";
+				regulator-min-microvolt = <3000000>;
+				regulator-max-microvolt = <3000000>;
+			};
+
+			buck1_reg: BUCK1 {
+				regulator-name = "VDD_MIF_1.0V";
+				regulator-min-microvolt = <8500000>;
+				regulator-max-microvolt = <1100000>;
+			};
+
+			buck2_reg: BUCK2 {
+				regulator-name = "VDD_ARM_1.0V";
+				regulator-min-microvolt = <850000>;
+				regulator-max-microvolt = <1500000>;
+			};
+
+			buck3_reg: BUCK3 {
+				regulator-name = "VDD_INT_1.1V";
+				regulator-min-microvolt = <850000>;
+				regulator-max-microvolt = <1150000>;
+			};
+
+			buck4_reg: BUCK4 {
+				regulator-name = "VDD_G3D_1.0V";
+				regulator-min-microvolt = <850000>;
+				regulator-max-microvolt = <1150000>;
+			};
+
+			buck5_reg: BUCK5 {
+				regulator-name = "VDDQ_AP_1.2V";
+				regulator-min-microvolt = <1200000>;
+				regulator-max-microvolt = <1200000>;
+			};
+
+			buck6_reg: BUCK6 {
+				regulator-name = "VCC_INL1/7_1.35V";
+				regulator-min-microvolt = <1350000>;
+				regulator-max-microvolt = <1350000>;
+			};
+
+			buck7_reg: BUCK7 {
+				regulator-name = "VCC_INL2/3/5_2.0V";
+				regulator-min-microvolt = <2000000>;
+				regulator-max-microvolt = <2000000>;
+			};
+
+			buck8_reg: BUCK8 {
+				regulator-name = "VCC_P3V3_2.85V";
+				regulator-min-microvolt = <750000>;
+				regulator-max-microvolt = <3300000>;
+			};
+		};
+	};
+};
+
+&sdhci2 {
+	samsung,bus-width = <4>;
+	samsung,timing = <1 2 3>;
+	cd-gpios = <&gpk2 2 0>;
+	status = "okay";
+};
+
+&mshc_0 {
+	samsung,bus-width = <8>;
+	samsung,timing = <2 1 0>;
+	samsung,removable = <0>;
+	fifoth_val = <0x203f0040>;
+	bus_hz = <400000000>;
+	div = <0x3>;
+	index = <4>;
+	status = "okay";
+};
diff -ruN u-boot-2018.07/arch/arm/dts/Makefile u-boot-x4412/arch/arm/dts/Makefile
--- u-boot-2018.07/arch/arm/dts/Makefile	2018-07-09 22:24:14.000000000 +0800
+++ u-boot-x4412/arch/arm/dts/Makefile	2018-09-26 05:54:09.130004000 +0800
@@ -12,7 +12,8 @@
 	exynos4210-universal_c210.dtb \
 	exynos4210-trats.dtb \
 	exynos4412-trats2.dtb \
-	exynos4412-odroid.dtb
+	exynos4412-odroid.dtb \
+	exynos4412-x4412.dtb
 
 dtb-$(CONFIG_TARGET_HIKEY) += hi6220-hikey.dtb
 
diff -ruN u-boot-2018.07/arch/arm/include/asm/mach-types.h u-boot-x4412/arch/arm/include/asm/mach-types.h
--- u-boot-2018.07/arch/arm/include/asm/mach-types.h	2018-07-09 22:24:14.000000000 +0800
+++ u-boot-x4412/arch/arm/include/asm/mach-types.h	2018-09-26 05:58:21.486004000 +0800
@@ -4550,7 +4550,8 @@
 #define MACH_TYPE_CANISMAJOR           4605
 #define MACH_TYPE_AT91SAM9263MIB       4606
 #define MACH_TYPE_COSINO_9G35          4607
-#define MACH_TYPE_TINY4412             4608
+//#define MACH_TYPE_TINY4412             4608
+#define MACH_TYPE_X4412                4608
 #define MACH_TYPE_BALLOON4             4609
 #define MACH_TYPE_PGG                  4610
 #define MACH_TYPE_XXSQ701              4611
diff -ruN u-boot-2018.07/arch/arm/mach-exynos/clock_init_exynos4.c u-boot-x4412/arch/arm/mach-exynos/clock_init_exynos4.c
--- u-boot-2018.07/arch/arm/mach-exynos/clock_init_exynos4.c	2018-07-09 22:24:14.000000000 +0800
+++ u-boot-x4412/arch/arm/mach-exynos/clock_init_exynos4.c	2018-09-26 06:44:21.710004000 +0800
@@ -30,7 +30,11 @@
 #include <asm/arch/clk.h>
 #include <asm/arch/clock.h>
 #include "common_setup.h"
+#ifdef CONFIG_X4412
+#include "x4412_setup.h"
+#else
 #include "exynos4_setup.h"
+#endif
 
 /*
  * system_clock_init: Initialize core clock and bus clock.
@@ -38,6 +42,269 @@
  */
 void system_clock_init(void)
 {
+#ifdef CONFIG_X4412
+	unsigned int set, clr, clr_src_cpu, clr_pll_con0, clr_src_dmc;
+	struct exynos4x12_clock *clk = (struct exynos4x12_clock *)
+						samsung_get_base_clock();
+	
+	/*
+	* CMU_CPU clocks src to MPLL
+	* Bit values:                 0  ; 1
+	* MUX_APLL_SEL:        FIN_PLL   ; FOUT_APLL
+	* MUX_CORE_SEL:        MOUT_APLL ; SCLK_MPLL
+	* MUX_HPM_SEL:         MOUT_APLL ; SCLK_MPLL_USER_C
+	* MUX_MPLL_USER_SEL_C: FIN_PLL   ; SCLK_MPLL
+	*/
+	clr_src_cpu = MUX_APLL_SEL(1) | MUX_CORE_SEL(1) |
+			MUX_HPM_SEL(1) | MUX_MPLL_USER_SEL_C(1);
+	set = MUX_APLL_SEL(0) | MUX_CORE_SEL(1) | MUX_HPM_SEL(1) |
+		MUX_MPLL_USER_SEL_C(1);
+	
+	clrsetbits_le32(&;clk->src_cpu, clr_src_cpu, set);
+	
+	/* Wait for mux change */
+	while (readl(&;clk->mux_stat_cpu) & MUX_STAT_CPU_CHANGING)
+		continue;
+	
+	/* Set APLL to 1400MHz */
+	clr_pll_con0 = SDIV(7) | PDIV(63) | MDIV(1023) | FSEL(1);
+	set = SDIV(0x0) | PDIV(0x3) | MDIV(0xAF) | FSEL(1);
+	
+	clrsetbits_le32(&;clk->apll_con0, clr_pll_con0, set);
+	
+	/* Wait for PLL to be locked */
+	while (!(readl(&;clk->apll_con0) & PLL_LOCKED_BIT))
+		continue;
+	
+	/* Set CMU_CPU clocks src to APLL */
+	set = MUX_APLL_SEL(1) | MUX_CORE_SEL(0) | MUX_HPM_SEL(0) |
+		MUX_MPLL_USER_SEL_C(1);
+	clrsetbits_le32(&clk->src_cpu, clr_src_cpu, set);
+	
+	/* Wait for mux change */
+	while (readl(&;clk->mux_stat_cpu) & MUX_STAT_CPU_CHANGING)
+		continue;
+	
+	set = CORE_RATIO(0) | COREM0_RATIO(2) | COREM1_RATIO(5) |
+		PERIPH_RATIO(0) | ATB_RATIO(4) | PCLK_DBG_RATIO(1) |
+		APLL_RATIO(0) | CORE2_RATIO(0);
+	/*
+	* Set dividers for MOUTcore = 1400 MHz
+	* coreout =      MOUT / (ratio + 1) = 1400 MHz (0)
+	* corem0 =     armclk / (ratio + 1) = 466 MHz (2)
+	* corem1 =     armclk / (ratio + 1) = 233 MHz (5)
+	* periph =     armclk / (ratio + 1) = 1400 MHz (0)
+	* atbout =       MOUT / (ratio + 1) = 280 MHz (4)
+	* pclkdbgout = atbout / (ratio + 1) = 140 MHz (1)
+	* sclkapll = MOUTapll / (ratio + 1) = 1400 MHz (0)
+	* core2out = core_out / (ratio + 1) = 1400 MHz (0) (armclk)
+	*/
+	clr = CORE_RATIO(7) | COREM0_RATIO(7) | COREM1_RATIO(7) |
+		PERIPH_RATIO(7) | ATB_RATIO(7) | PCLK_DBG_RATIO(7) |
+		APLL_RATIO(7) | CORE2_RATIO(7);
+	
+	clrsetbits_le32(&;clk->div_cpu0, clr, set);
+	
+	/* Wait for divider ready status */
+	while (readl(&;clk->div_stat_cpu0) & DIV_STAT_CPU0_CHANGING)
+		continue;
+	
+	/*
+	* For MOUThpm = 1400 MHz (MOUTapll)
+	* doutcopy = MOUThpm / (ratio + 1) = 280 (4)
+	* sclkhpm = doutcopy / (ratio + 1) = 280 (4)
+	* cores_out = armclk / (ratio + 1) = 280 (4)
+	*/
+	clr = COPY_RATIO(7) | HPM_RATIO(7) | CORES_RATIO(7);
+	set = COPY_RATIO(4) | HPM_RATIO(4) | CORES_RATIO(4);
+	
+	clrsetbits_le32(&;clk->div_cpu1, clr, set);
+	
+	/* Wait for divider ready status */
+	while (readl(&;clk->div_stat_cpu1) & DIV_STAT_CPU1_CHANGING)
+		continue;
+	
+	/*
+	* Set CMU_DMC clocks src to APLL
+	* Bit values:             0  ; 1
+	* MUX_C2C_SEL:      SCLKMPLL ; SCLKAPLL
+	* MUX_DMC_BUS_SEL:  SCLKMPLL ; SCLKAPLL
+	* MUX_DPHY_SEL:     SCLKMPLL ; SCLKAPLL
+	* MUX_MPLL_SEL:     FINPLL   ; MOUT_MPLL_FOUT
+	* MUX_PWI_SEL:      0110 (MPLL); 0111 (EPLL); 1000 (VPLL); 0(XXTI)
+	* MUX_G2D_ACP0_SEL: SCLKMPLL ; SCLKAPLL
+	* MUX_G2D_ACP1_SEL: SCLKEPLL ; SCLKVPLL
+	* MUX_G2D_ACP_SEL:  OUT_ACP0 ; OUT_ACP1
+	*/
+	clr_src_dmc = MUX_C2C_SEL(1) | MUX_DMC_BUS_SEL(1) |
+			MUX_DPHY_SEL(1) | MUX_MPLL_SEL(1) |
+			MUX_PWI_SEL(15) | MUX_G2D_ACP0_SEL(1) |
+			MUX_G2D_ACP1_SEL(1) | MUX_G2D_ACP_SEL(1);
+	set = MUX_C2C_SEL(1) | MUX_DMC_BUS_SEL(1) | MUX_DPHY_SEL(1) |
+		MUX_MPLL_SEL(0) | MUX_PWI_SEL(0) | MUX_G2D_ACP0_SEL(1) |
+		MUX_G2D_ACP1_SEL(1) | MUX_G2D_ACP_SEL(1);
+	
+	clrsetbits_le32(&;clk->src_dmc, clr_src_dmc, set);
+	
+	/* Wait for mux change */
+	while (readl(&;clk->mux_stat_dmc) & MUX_STAT_DMC_CHANGING)
+		continue;
+	
+	/* Set MPLL to 800MHz */
+	set = SDIV(0) | PDIV(3) | MDIV(100) | FSEL(0) | PLL_ENABLE(1);
+	
+	clrsetbits_le32(&;clk->mpll_con0, clr_pll_con0, set);
+	
+	/* Wait for PLL to be locked */
+	while (!(readl(&;clk->mpll_con0) & PLL_LOCKED_BIT))
+		continue;
+	
+	/* Switch back CMU_DMC mux */
+	set = MUX_C2C_SEL(0) | MUX_DMC_BUS_SEL(0) | MUX_DPHY_SEL(0) |
+		MUX_MPLL_SEL(1) | MUX_PWI_SEL(6) | MUX_G2D_ACP0_SEL(0) |
+		MUX_G2D_ACP1_SEL(0) | MUX_G2D_ACP_SEL(0);
+	
+	clrsetbits_le32(&;clk->src_dmc, clr_src_dmc, set);
+	
+	/* Wait for mux change */
+	while (readl(&;clk->mux_stat_dmc) & MUX_STAT_DMC_CHANGING)
+		continue;
+	
+	/* CLK_DIV_DMC0 */
+	clr = ACP_RATIO(7) | ACP_PCLK_RATIO(7) | DPHY_RATIO(7) |
+		DMC_RATIO(7) | DMCD_RATIO(7) | DMCP_RATIO(7);
+	/*
+	* For:
+	* MOUTdmc = 800 MHz
+	* MOUTdphy = 800 MHz
+	*
+	* aclk_acp = MOUTdmc / (ratio + 1) = 200 (3)
+	* pclk_acp = aclk_acp / (ratio + 1) = 100 (1)
+	* sclk_dphy = MOUTdphy / (ratio + 1) = 400 (1)
+	* sclk_dmc = MOUTdmc / (ratio + 1) = 400 (1)
+	* aclk_dmcd = sclk_dmc / (ratio + 1) = 200 (1)
+	* aclk_dmcp = aclk_dmcd / (ratio + 1) = 100 (1)
+	*/
+	set = ACP_RATIO(3) | ACP_PCLK_RATIO(1) | DPHY_RATIO(1) |
+		DMC_RATIO(1) | DMCD_RATIO(1) | DMCP_RATIO(1);
+	
+	clrsetbits_le32(&;clk->div_dmc0, clr, set);
+	
+	/* Wait for divider ready status */
+	while (readl(&;clk->div_stat_dmc0) & DIV_STAT_DMC0_CHANGING)
+		continue;
+	
+	/* CLK_DIV_DMC1 */
+	clr = G2D_ACP_RATIO(15) | C2C_RATIO(7) | PWI_RATIO(15) |
+		C2C_ACLK_RATIO(7) | DVSEM_RATIO(127) | DPM_RATIO(127);
+	/*
+	* For:
+	* MOUTg2d = 800 MHz
+	* MOUTc2c = 800 Mhz
+	* MOUTpwi = 800 MHz
+	*
+	* sclk_g2d_acp = MOUTg2d / (ratio + 1) = 200 (3)
+	* sclk_c2c = MOUTc2c / (ratio + 1) = 400 (1)
+	* aclk_c2c = sclk_c2c / (ratio + 1) = 200 (1)
+	* sclk_pwi = MOUTpwi / (ratio + 1) = 100 (7)
+	*/
+	set = G2D_ACP_RATIO(3) | C2C_RATIO(1) | PWI_RATIO(7) |
+		C2C_ACLK_RATIO(1) | DVSEM_RATIO(1) | DPM_RATIO(1);
+	
+	clrsetbits_le32(&;clk->div_dmc1, clr, set);
+	
+	/* Wait for divider ready status */
+	while (readl(&;clk->div_stat_dmc1) & DIV_STAT_DMC1_CHANGING)
+		continue;
+	
+	/* CLK_SRC_PERIL0 */
+	clr = UART0_SEL(15) | UART1_SEL(15) | UART2_SEL(15) |
+		UART3_SEL(15) | UART4_SEL(15);
+	/*
+	* Set CLK_SRC_PERIL0 clocks src to MPLL
+	* src values: 0(XXTI); 1(XusbXTI); 2(SCLK_HDMI24M); 3(SCLK_USBPHY0);
+	*             5(SCLK_HDMIPHY); 6(SCLK_MPLL_USER_T); 7(SCLK_EPLL);
+	*             8(SCLK_VPLL)
+	*
+	* Set all to SCLK_MPLL_USER_T
+	*/
+	set = UART0_SEL(6) | UART1_SEL(6) | UART2_SEL(6) | UART3_SEL(6) |
+		UART4_SEL(6);
+	
+	clrsetbits_le32(&;clk->src_peril0, clr, set);
+	
+	/* CLK_DIV_PERIL0 */
+	clr = UART0_RATIO(15) | UART1_RATIO(15) | UART2_RATIO(15) |
+		UART3_RATIO(15) | UART4_RATIO(15);
+	/*
+	* For MOUTuart0-4: 800MHz
+	*
+	* SCLK_UARTx = MOUTuartX / (ratio + 1) = 100 (7)
+	*/
+	set = UART0_RATIO(7) | UART1_RATIO(7) | UART2_RATIO(7) |
+		UART3_RATIO(7) | UART4_RATIO(7);
+	
+	clrsetbits_le32(&;clk->div_peril0, clr, set);
+	
+	while (readl(&;clk->div_stat_peril0) & DIV_STAT_PERIL0_CHANGING)
+		continue;
+	
+	/* CLK_DIV_FSYS1 */
+	clr = MMC0_RATIO(15) | MMC0_PRE_RATIO(255) | MMC1_RATIO(15) |
+		MMC1_PRE_RATIO(255);
+	/*
+	* For MOUTmmc0-3 = 800 MHz (MPLL)
+	*
+	* DOUTmmc1 = MOUTmmc1 / (ratio + 1) = 100 (7)
+	* sclk_mmc1 = DOUTmmc1 / (ratio + 1) = 50 (1)
+	* DOUTmmc0 = MOUTmmc0 / (ratio + 1) = 100 (7)
+	* sclk_mmc0 = DOUTmmc0 / (ratio + 1) = 50 (1)
+	*/
+	set = MMC0_RATIO(7) | MMC0_PRE_RATIO(1) | MMC1_RATIO(7) |
+		MMC1_PRE_RATIO(1);
+	
+	clrsetbits_le32(&;clk->div_fsys1, clr, set);
+	
+	/* Wait for divider ready status */
+	while (readl(&;clk->div_stat_fsys1) & DIV_STAT_FSYS1_CHANGING)
+		continue;
+	
+	/* CLK_DIV_FSYS2 */
+	clr = MMC2_RATIO(15) | MMC2_PRE_RATIO(255) | MMC3_RATIO(15) |
+		MMC3_PRE_RATIO(255);
+	/*
+	* For MOUTmmc0-3 = 800 MHz (MPLL)
+	*
+	* DOUTmmc3 = MOUTmmc3 / (ratio + 1) = 100 (7)
+	* sclk_mmc3 = DOUTmmc3 / (ratio + 1) = 50 (1)
+	* DOUTmmc2 = MOUTmmc2 / (ratio + 1) = 100 (7)
+	* sclk_mmc2 = DOUTmmc2 / (ratio + 1) = 50 (1)
+	*/
+	set = MMC2_RATIO(7) | MMC2_PRE_RATIO(1) | MMC3_RATIO(7) |
+		MMC3_PRE_RATIO(1);
+	
+	clrsetbits_le32(&;clk->div_fsys2, clr, set);
+	
+	/* Wait for divider ready status */
+	while (readl(&;clk->div_stat_fsys2) & DIV_STAT_FSYS2_CHANGING)
+		continue;
+	
+	/* CLK_DIV_FSYS3 */
+	clr = MMC4_RATIO(15) | MMC4_PRE_RATIO(255);
+	/*
+	* For MOUTmmc4 = 800 MHz (MPLL)
+	*
+	* DOUTmmc4 = MOUTmmc4 / (ratio + 1) = 100 (7)
+	* sclk_mmc4 = DOUTmmc4 / (ratio + 1) = 100 (0)
+	*/
+	set = MMC4_RATIO(7) | MMC4_PRE_RATIO(0);
+	
+	clrsetbits_le32(&;clk->div_fsys3, clr, set);
+	
+	/* Wait for divider ready status */
+	while (readl(&;clk->div_stat_fsys3) & DIV_STAT_FSYS3_CHANGING)
+		continue;
+#else
 	struct exynos4_clock *clk =
 			(struct exynos4_clock *)samsung_get_base_clock();
 
@@ -91,4 +358,5 @@
 	writel(VPLL_CON0_VAL, &clk->vpll_con0);
 
 	sdelay(0x30000);
+#endif
 }
diff -ruN u-boot-2018.07/arch/arm/mach-exynos/dmc_init_exynos4.c u-boot-x4412/arch/arm/mach-exynos/dmc_init_exynos4.c
--- u-boot-2018.07/arch/arm/mach-exynos/dmc_init_exynos4.c	2018-07-09 22:24:14.000000000 +0800
+++ u-boot-x4412/arch/arm/mach-exynos/dmc_init_exynos4.c	2018-09-26 07:51:22.458000000 +0800
@@ -29,6 +29,27 @@
 #include "exynos4_setup.h"
 
 struct mem_timings mem = {
+#ifdef CONFIG_TINY4412
+struct mem_timings mem = {
+	.direct_cmd_msr = {
+		DIRECT_CMD1, DIRECT_CMD2, DIRECT_CMD3, DIRECT_CMD4
+	},
+	.timingref = 0x000000BB,
+	.timingrow = 0x4046654f,
+	.timingdata = 0x46400506,
+	.timingpower = 0x52000A3C,
+	.zqcontrol = 0xE3854C03,
+	.control0 = 0x71101008,
+	.control1 = 0xe0000086,
+	.control2 = 0x00000000,
+	.concontrol = 0x0FFF301A,
+	.prechconfig = 0xff000000,
+	.memcontrol = 0x00312640,
+	.memconfig0 = 0x40e01323,
+	.memconfig1 = 0x60e01323,
+	.dll_resync = FORCE_DLL_RESYNC,
+	.dll_on = DLL_CONTROL_ON,
+#else
 	.direct_cmd_msr = {
 		DIRECT_CMD1, DIRECT_CMD2, DIRECT_CMD3, DIRECT_CMD4
 	},
@@ -47,10 +68,14 @@
 	.memconfig1 = MEMCONFIG1_VAL,
 	.dll_resync = FORCE_DLL_RESYNC,
 	.dll_on = DLL_CONTROL_ON,
+#endif
 };
 static void phy_control_reset(int ctrl_no, struct exynos4_dmc *dmc)
 {
 	if (ctrl_no) {
+#ifdef CONFIG_TINY4412
+		writel(0x8000001F, &dmc->ivcontrol);
+#endif
 		writel((mem.control1 | (1 << mem.dll_resync)),
 		       &dmc->phycontrol1);
 		writel((mem.control1 | (0 << mem.dll_resync)),
diff -ruN u-boot-2018.07/arch/arm/mach-exynos/Kconfig u-boot-x4412/arch/arm/mach-exynos/Kconfig
--- u-boot-2018.07/arch/arm/mach-exynos/Kconfig	2018-07-09 22:24:14.000000000 +0800
+++ u-boot-x4412/arch/arm/mach-exynos/Kconfig	2018-09-26 06:02:22.598004000 +0800
@@ -60,6 +60,10 @@
 	bool "Exynos4412 Origen board"
 	select SUPPORT_SPL
 
+config TARGET_X4412
+	bool "Exynos4412 X4412 board"
+	select SUPPORT_SPL
+
 config TARGET_TRATS2
 	bool "Exynos4412 Trat2 board"
 
@@ -156,6 +160,7 @@
 source "board/samsung/trats/Kconfig"
 source "board/samsung/universal_c210/Kconfig"
 source "board/samsung/origen/Kconfig"
+source "board/samsung/x4412/Kconfig"
 source "board/samsung/trats2/Kconfig"
 source "board/samsung/odroid/Kconfig"
 source "board/samsung/arndale/Kconfig"
diff -ruN u-boot-2018.07/arch/arm/mach-exynos/x4412_setup.h u-boot-x4412/arch/arm/mach-exynos/x4412_setup.h
--- u-boot-2018.07/arch/arm/mach-exynos/x4412_setup.h	1970-01-01 08:00:00.000000000 +0800
+++ u-boot-x4412/arch/arm/mach-exynos/x4412_setup.h	2018-09-26 07:35:01.614000000 +0800
@@ -0,0 +1,228 @@
+/*
+ * Copyright (C) 2014 Samsung Electronics
+ * Przemyslaw Marczak <p.marczak@samsung.com>
+ *
+ * SPDX-License-Identifier:    GPL-2.0+
+ */
+
+#ifndef __X4412_SETUP__
+#define __X4412_SETUP__
+
+/* A/M PLL_CON0 */
+#define SDIV(x)			((x) &; 0x7)
+#define PDIV(x)			(((x) &; 0x3f) << 8)
+#define MDIV(x)			(((x) &; 0x3ff) << 16)
+#define FSEL(x)			(((x) &; 0x1) << 27)
+#define PLL_LOCKED_BIT		(0x1 <;< 29)
+#define PLL_ENABLE(x)		(((x) &; 0x1) << 31)
+
+/* CLK_SRC_CPU */
+#define MUX_APLL_SEL(x)		((x) &; 0x1)
+#define MUX_CORE_SEL(x)		(((x) &; 0x1) << 16)
+#define MUX_HPM_SEL(x)		(((x) &; 0x1) << 20)
+#define MUX_MPLL_USER_SEL_C(x)	(((x) &; 0x1) << 24)
+
+#define MUX_STAT_CHANGING	0x100
+
+/* CLK_MUX_STAT_CPU */
+#define APLL_SEL(x)		((x) &; 0x7)
+#define CORE_SEL(x)		(((x) &; 0x7) << 16)
+#define HPM_SEL(x)		(((x) &; 0x7) << 20)
+#define MPLL_USER_SEL_C(x)	(((x) &; 0x7) << 24)
+#define MUX_STAT_CPU_CHANGING	(APLL_SEL(MUX_STAT_CHANGING) | \
+                CORE_SEL(MUX_STAT_CHANGING) | \
+                HPM_SEL(MUX_STAT_CHANGING) | \
+                MPLL_USER_SEL_C(MUX_STAT_CHANGING))
+
+/* CLK_DIV_CPU0 */
+#define CORE_RATIO(x)		((x) &; 0x7)
+#define COREM0_RATIO(x)		(((x) &; 0x7) << 4)
+#define COREM1_RATIO(x)		(((x) &; 0x7) << 8)
+#define PERIPH_RATIO(x)		(((x) &; 0x7) << 12)
+#define ATB_RATIO(x)		(((x) &; 0x7) << 16)
+#define PCLK_DBG_RATIO(x)	(((x) &; 0x7) << 20)
+#define APLL_RATIO(x)		(((x) &; 0x7) << 24)
+#define CORE2_RATIO(x)		(((x) &; 0x7) << 28)
+
+/* CLK_DIV_STAT_CPU0 */
+#define DIV_CORE(x)		((x) &; 0x1)
+#define DIV_COREM0(x)		(((x) &; 0x1) << 4)
+#define DIV_COREM1(x)		(((x) &; 0x1) << 8)
+#define DIV_PERIPH(x)		(((x) &; 0x1) << 12)
+#define DIV_ATB(x)		(((x) &; 0x1) << 16)
+#define DIV_PCLK_DBG(x)		(((x) &; 0x1) << 20)
+#define DIV_APLL(x)		(((x) &; 0x1) << 24)
+#define DIV_CORE2(x)		(((x) &; 0x1) << 28)
+
+#define DIV_STAT_CHANGING       0x1
+#define DIV_STAT_CPU0_CHANGING  (DIV_CORE(DIV_STAT_CHANGING) | \
+                DIV_COREM0(DIV_STAT_CHANGING) | \
+                DIV_COREM1(DIV_STAT_CHANGING) | \
+                DIV_PERIPH(DIV_STAT_CHANGING) | \
+                DIV_ATB(DIV_STAT_CHANGING) | \
+                DIV_PCLK_DBG(DIV_STAT_CHANGING) | \
+                DIV_APLL(DIV_STAT_CHANGING) | \
+                DIV_CORE2(DIV_STAT_CHANGING))
+
+/* CLK_DIV_CPU1 */
+#define COPY_RATIO(x)           ((x) &; 0x7)
+#define HPM_RATIO(x)            (((x) &; 0x7) << 4)
+#define CORES_RATIO(x)		(((x) &; 0x7) << 8)
+
+/* CLK_DIV_STAT_CPU1 */
+#define DIV_COPY(x)		((x) &; 0x7)
+#define DIV_HPM(x)		(((x) &; 0x1) << 4)
+#define DIV_CORES(x)		(((x) &; 0x1) << 8)
+
+#define DIV_STAT_CPU1_CHANGING    (DIV_COPY(DIV_STAT_CHANGING) | \
+                DIV_HPM(DIV_STAT_CHANGING) | \
+                DIV_CORES(DIV_STAT_CHANGING))
+
+/* CLK_SRC_DMC */
+#define MUX_C2C_SEL(x)		((x) &; 0x1)
+#define MUX_DMC_BUS_SEL(x)	(((x) &; 0x1) << 4)
+#define MUX_DPHY_SEL(x)		(((x) &; 0x1) << 8)
+#define MUX_MPLL_SEL(x)		(((x) &; 0x1) << 12)
+#define MUX_PWI_SEL(x)		(((x) &; 0xf) << 16)
+#define MUX_G2D_ACP0_SEL(x)	(((x) &; 0x1) << 20)
+#define MUX_G2D_ACP1_SEL(x)	(((x) &; 0x1) << 24)
+#define MUX_G2D_ACP_SEL(x)	(((x) &; 0x1) << 28)
+
+/* CLK_MUX_STAT_DMC */
+#define C2C_SEL(x)        	(((x)) &; 0x7)
+#define DMC_BUS_SEL(x)        	(((x) &; 0x7) << 4)
+#define DPHY_SEL(x)        	(((x) &; 0x7) << 8)
+#define MPLL_SEL(x)        	(((x) &; 0x7) << 12)
+/* #define PWI_SEL(x)        	   (((x) &; 0xf) << 16)  - Reserved */
+#define G2D_ACP0_SEL(x)		(((x) &; 0x7) << 20)
+#define G2D_ACP1_SEL(x)		(((x) &; 0x7) << 24)
+#define G2D_ACP_SEL(x)		(((x) &; 0x7) << 28)
+
+#define MUX_STAT_DMC_CHANGING    (C2C_SEL(MUX_STAT_CHANGING) | \
+                DMC_BUS_SEL(MUX_STAT_CHANGING) | \
+                DPHY_SEL(MUX_STAT_CHANGING) | \
+                MPLL_SEL(MUX_STAT_CHANGING) |\
+                G2D_ACP0_SEL(MUX_STAT_CHANGING) | \
+                G2D_ACP1_SEL(MUX_STAT_CHANGING) | \
+                G2D_ACP_SEL(MUX_STAT_CHANGING))
+
+/* CLK_DIV_DMC0 */
+#define ACP_RATIO(x)		((x) &; 0x7)
+#define ACP_PCLK_RATIO(x)	(((x) &; 0x7) << 4)
+#define DPHY_RATIO(x)		(((x) &; 0x7) << 8)
+#define DMC_RATIO(x)		(((x) &; 0x7) << 12)
+#define DMCD_RATIO(x)		(((x) &; 0x7) << 16)
+#define DMCP_RATIO(x)		(((x) &; 0x7) << 20)
+
+/* CLK_DIV_STAT_DMC0 */
+#define DIV_ACP(x)		((x) &; 0x1)
+#define DIV_ACP_PCLK(x)		(((x) &; 0x1) << 4)
+#define DIV_DPHY(x)		(((x) &; 0x1) << 8)
+#define DIV_DMC(x)		(((x) &; 0x1) << 12)
+#define DIV_DMCD(x)		(((x) &; 0x1) << 16)
+#define DIV_DMCP(x)		(((x) &; 0x1) << 20)
+
+#define DIV_STAT_DMC0_CHANGING    (DIV_ACP(DIV_STAT_CHANGING) | \
+                DIV_ACP_PCLK(DIV_STAT_CHANGING) | \
+                DIV_DPHY(DIV_STAT_CHANGING) | \
+                DIV_DMC(DIV_STAT_CHANGING) | \
+                DIV_DMCD(DIV_STAT_CHANGING) | \
+                DIV_DMCP(DIV_STAT_CHANGING))
+
+/* CLK_DIV_DMC1 */
+#define G2D_ACP_RATIO(x) 	((x) &; 0xf)
+#define C2C_RATIO(x)		(((x) &; 0x7) << 4)
+#define PWI_RATIO(x)		(((x) &; 0xf) << 8)
+#define C2C_ACLK_RATIO(x)	(((x) &; 0x7) << 12)
+#define DVSEM_RATIO(x)		(((x) &; 0x7f) << 16)
+#define DPM_RATIO(x)		(((x) &; 0x7f) << 24)
+
+/* CLK_DIV_STAT_DMC1 */
+#define DIV_G2D_ACP(x)		((x) &; 0x1)
+#define DIV_C2C(x)		(((x) &; 0x1) << 4)
+#define DIV_PWI(x)		(((x) &; 0x1) << 8)
+#define DIV_C2C_ACLK(x)		(((x) &; 0x1) << 12)
+#define DIV_DVSEM(x)		(((x) &; 0x1) << 16)
+#define DIV_DPM(x)		(((x) &; 0x1) << 24)
+
+#define DIV_STAT_DMC1_CHANGING    (DIV_G2D_ACP(DIV_STAT_CHANGING) | \
+                DIV_C2C(DIV_STAT_CHANGING) | \
+                DIV_PWI(DIV_STAT_CHANGING) | \
+                DIV_C2C_ACLK(DIV_STAT_CHANGING) | \
+                DIV_DVSEM(DIV_STAT_CHANGING) | \
+                DIV_DPM(DIV_STAT_CHANGING))
+
+/* Set CLK_SRC_PERIL0 */
+#define UART4_SEL(x)		(((x) &; 0xf) << 16)
+#define UART3_SEL(x)		(((x) &; 0xf) << 12)
+#define UART2_SEL(x)		(((x) &; 0xf) << 8)
+#define UART1_SEL(x)		(((x) &; 0xf) << 4)
+#define UART0_SEL(x)		((x) &; 0xf)
+
+/* Set CLK_DIV_PERIL0 */
+#define UART4_RATIO(x)		(((x) &; 0xf) << 16)
+#define UART3_RATIO(x)		(((x) &; 0xf) << 12)
+#define UART2_RATIO(x)		(((x) &; 0xf) << 8)
+#define UART1_RATIO(x)		(((x) &; 0xf) << 4)
+#define UART0_RATIO(x)		((x) &; 0xf)
+
+/* Set CLK_DIV_STAT_PERIL0 */
+#define DIV_UART4(x)		(((x) &; 0x1) << 16)
+#define DIV_UART3(x)		(((x) &; 0x1) << 12)
+#define DIV_UART2(x)		(((x) &; 0x1) << 8)
+#define DIV_UART1(x)		(((x) &; 0x1) << 4)
+#define DIV_UART0(x)		((x) &; 0x1)
+
+#define DIV_STAT_PERIL0_CHANGING    (DIV_UART4(DIV_STAT_CHANGING) | \
+                    DIV_UART3(DIV_STAT_CHANGING) | \
+                    DIV_UART2(DIV_STAT_CHANGING) | \
+                    DIV_UART1(DIV_STAT_CHANGING) | \
+                    DIV_UART0(DIV_STAT_CHANGING))
+
+/* CLK_DIV_FSYS1 */
+#define MMC0_RATIO(x)		((x) &; 0xf)
+#define MMC0_PRE_RATIO(x)	(((x) &; 0xff) << 8)
+#define MMC1_RATIO(x)		(((x) &; 0xf) << 16)
+#define MMC1_PRE_RATIO(x)	(((x) &; 0xff) << 24)
+
+/* CLK_DIV_STAT_FSYS1 */
+#define DIV_MMC0(x)		((x) &; 1)
+#define DIV_MMC0_PRE(x)		(((x) &; 1) << 8)
+#define DIV_MMC1(x)		(((x) &; 1) << 16)
+#define DIV_MMC1_PRE(x)		(((x) &; 1) << 24)
+
+#define DIV_STAT_FSYS1_CHANGING        (DIV_MMC0(DIV_STAT_CHANGING) | \
+                    DIV_MMC0_PRE(DIV_STAT_CHANGING) | \
+                    DIV_MMC1(DIV_STAT_CHANGING) | \
+                    DIV_MMC1_PRE(DIV_STAT_CHANGING))
+
+/* CLK_DIV_FSYS2 */
+#define MMC2_RATIO(x)		((x) &; 0xf)
+#define MMC2_PRE_RATIO(x)	(((x) &; 0xff) << 8)
+#define MMC3_RATIO(x)		(((x) &; 0xf) << 16)
+#define MMC3_PRE_RATIO(x)	(((x) &; 0xff) << 24)
+
+/* CLK_DIV_STAT_FSYS2 */
+#define DIV_MMC2(x)		((x) &; 0x1)
+#define DIV_MMC2_PRE(x)		(((x) &; 0x1) << 8)
+#define DIV_MMC3(x)		(((x) &; 0x1) << 16)
+#define DIV_MMC3_PRE(x)		(((x) &; 0x1) << 24)
+
+#define DIV_STAT_FSYS2_CHANGING        (DIV_MMC2(DIV_STAT_CHANGING) | \
+                    DIV_MMC2_PRE(DIV_STAT_CHANGING) | \
+                    DIV_MMC3(DIV_STAT_CHANGING) | \
+                    DIV_MMC3_PRE(DIV_STAT_CHANGING))
+
+/* CLK_DIV_FSYS3 */
+#define MMC4_RATIO(x)		((x) &; 0x7)
+#define MMC4_PRE_RATIO(x)	(((x) &; 0xff) << 8)
+
+/* CLK_DIV_STAT_FSYS3 */
+#define DIV_MMC4(x)		((x) &; 0x1)
+#define DIV_MMC4_PRE(x)		(((x) &; 0x1) << 8)
+
+#define DIV_STAT_FSYS3_CHANGING        (DIV_MMC4(DIV_STAT_CHANGING) | \
+                    DIV_MMC4_PRE(DIV_STAT_CHANGING))
+
+#endif /* __X4412_SETUP__ */
+
diff -ruN u-boot-2018.07/board/samsung/x4412/Kconfig u-boot-x4412/board/samsung/x4412/Kconfig
--- u-boot-2018.07/board/samsung/x4412/Kconfig	1970-01-01 08:00:00.000000000 +0800
+++ u-boot-x4412/board/samsung/x4412/Kconfig	2018-09-26 06:03:34.386004000 +0800
@@ -0,0 +1,12 @@
+if TARGET_ORIGEN
+
+config SYS_BOARD
+	default "x4412"
+
+config SYS_VENDOR
+	default "samsung"
+
+config SYS_CONFIG_NAME
+	default "x4412"
+
+endif
diff -ruN u-boot-2018.07/board/samsung/x4412/MAINTAINERS u-boot-x4412/board/samsung/x4412/MAINTAINERS
--- u-boot-2018.07/board/samsung/x4412/MAINTAINERS	1970-01-01 08:00:00.000000000 +0800
+++ u-boot-x4412/board/samsung/x4412/MAINTAINERS	2018-09-25 22:37:15.301668999 +0800
@@ -0,0 +1,6 @@
+ORIGEN BOARD
+M:	Chander Kashyap <k.chander@samsung.com>
+S:	Maintained
+F:	board/samsung/origen/
+F:	include/configs/origen.h
+F:	configs/origen_defconfig
diff -ruN u-boot-2018.07/board/samsung/x4412/Makefile u-boot-x4412/board/samsung/x4412/Makefile
--- u-boot-2018.07/board/samsung/x4412/Makefile	1970-01-01 08:00:00.000000000 +0800
+++ u-boot-x4412/board/samsung/x4412/Makefile	2018-09-25 22:37:15.301668999 +0800
@@ -0,0 +1,22 @@
+# SPDX-License-Identifier: GPL-2.0+
+#
+# Copyright (C) 2011 Samsung Electronics
+#
+# Add by Wang.Yu 2018-09-25. Copy from samsung origen board.
+
+ifdef CONFIG_SPL_BUILD
+# necessary to create built-in.o
+obj- := __dummy__.o
+
+hostprogs-y := tools/mkx4412spl
+always := $(hostprogs-y)
+
+# omit -O2 option to suppress
+#   warning: dereferencing type-punned pointer will break strict-aliasing rules
+#
+# TODO:
+# Fix the root cause in tools/mkx4412spl.c and delete the following work-around
+$(obj)/tools/mkx4412spl: HOSTCFLAGS:=$(filter-out -O2,$(HOSTCFLAGS))
+else
+obj-y	+= x4412.o
+endif
diff -ruN u-boot-2018.07/board/samsung/x4412/tools/mkx4412spl.c u-boot-x4412/board/samsung/x4412/tools/mkx4412spl.c
--- u-boot-2018.07/board/samsung/x4412/tools/mkx4412spl.c	1970-01-01 08:00:00.000000000 +0800
+++ u-boot-x4412/board/samsung/x4412/tools/mkx4412spl.c	2018-09-25 22:37:15.301668999 +0800
@@ -0,0 +1,110 @@
+// SPDX-License-Identifier: GPL-2.0+
+/*
+ * Copyright (C) 2011 Samsung Electronics
+ * Add by Wang.Yu 2018-09-25. Copy from samsung origen board.
+ */
+
+#include <stdio.h>
+#include <stdlib.h>
+#include <unistd.h>
+#include <fcntl.h>
+#include <errno.h>
+#include <string.h>
+#include <sys/stat.h>
+
+#define BUFSIZE			(16*1024)
+#define IMG_SIZE		(16*1024)
+#define SPL_HEADER_SIZE		16
+#define FILE_PERM		(S_IRUSR | S_IWUSR | S_IRGRP \
+				| S_IWGRP | S_IROTH | S_IWOTH)
+#define SPL_HEADER		"S5PC210 HEADER  "
+/*
+* Requirement:
+* IROM code reads first 14K bytes from boot device.
+* It then calculates the checksum of 14K-4 bytes and compare with data at
+* 14K-4 offset.
+*
+* This function takes two filenames:
+* IN  "u-boot-spl.bin" and
+* OUT "$(BOARD)-spl.bin as filenames.
+* It reads the "u-boot-spl.bin" in 16K buffer.
+* It calculates checksum of 14K-4 Bytes and stores at 14K-4 offset in buffer.
+* It writes the buffer to "$(BOARD)-spl.bin" file.
+*/
+
+int main(int argc, char **argv)
+{
+	int i, len;
+	unsigned char buffer[BUFSIZE] = {0};
+	int ifd, ofd;
+	unsigned int checksum = 0, count;
+
+	if (argc != 3) {
+		printf(" %d Wrong number of arguments\n", argc);
+		exit(EXIT_FAILURE);
+	}
+
+	ifd = open(argv[1], O_RDONLY);
+	if (ifd < 0) {
+		fprintf(stderr, "%s: Can't open %s: %s\n",
+			argv[0], argv[1], strerror(errno));
+		exit(EXIT_FAILURE);
+	}
+
+	ofd = open(argv[2], O_WRONLY | O_CREAT | O_TRUNC, FILE_PERM);
+	if (ofd < 0) {
+		fprintf(stderr, "%s: Can't open %s: %s\n",
+			argv[0], argv[2], strerror(errno));
+		if (ifd)
+			close(ifd);
+		exit(EXIT_FAILURE);
+	}
+
+	len = lseek(ifd, 0, SEEK_END);
+	lseek(ifd, 0, SEEK_SET);
+
+	memcpy(&buffer[0], SPL_HEADER, SPL_HEADER_SIZE);
+
+	count = (len < (IMG_SIZE - SPL_HEADER_SIZE))
+		? len : (IMG_SIZE - SPL_HEADER_SIZE);
+
+	if (read(ifd, buffer + SPL_HEADER_SIZE, count) != count) {
+		fprintf(stderr, "%s: Can't read %s: %s\n",
+			argv[0], argv[1], strerror(errno));
+
+		if (ifd)
+			close(ifd);
+		if (ofd)
+			close(ofd);
+
+		exit(EXIT_FAILURE);
+	}
+
+	for (i = 0; i < IMG_SIZE - SPL_HEADER_SIZE; i++)
+		checksum += buffer[i+16];
+
+	*(unsigned long *)buffer ^= 0x1f;
+	*(unsigned long *)(buffer+4) ^= checksum;
+
+	for (i = 1; i < SPL_HEADER_SIZE; i++)
+		buffer[i] ^= buffer[i-1];
+
+	if (write(ofd, buffer, BUFSIZE) != BUFSIZE) {
+		fprintf(stderr, "%s: Can't write %s: %s\n",
+			argv[0], argv[2], strerror(errno));
+
+		if (ifd)
+			close(ifd);
+		if (ofd)
+			close(ofd);
+
+		exit(EXIT_FAILURE);
+	}
+
+	if (ifd)
+		close(ifd);
+	if (ofd)
+		close(ofd);
+
+	return EXIT_SUCCESS;
+}
diff -ruN u-boot-2018.07/board/samsung/x4412/x4412.c u-boot-x4412/board/samsung/x4412/x4412.c
--- u-boot-2018.07/board/samsung/x4412/x4412.c	1970-01-01 08:00:00.000000000 +0800
+++ u-boot-x4412/board/samsung/x4412/x4412.c	2018-09-25 22:37:15.301668999 +0800
@@ -0,0 +1,36 @@
+// SPDX-License-Identifier: GPL-2.0+
+/*
+ * Copyright (C) 2011 Samsung Electronics
+ * Add by Wang.Yu 2018-09-25. Copy from samsung origen board.
+ */
+
+#include <common.h>
+#include <asm/io.h>
+#include <asm/gpio.h>
+#include <asm/arch/cpu.h>
+#include <asm/arch/mmc.h>
+#include <asm/arch/periph.h>
+#include <asm/arch/pinmux.h>
+#include <usb.h>
+
+u32 get_board_rev(void)
+{
+	return 0;
+}
+
+int exynos_init(void)
+{
+	return 0;
+}
+
+int board_usb_init(int index, enum usb_init_type init)
+{
+	return 0;
+}
+
+#ifdef CONFIG_BOARD_EARLY_INIT_F
+int exynos_early_init_f(void)
+{
+	return 0;
+}
+#endif
diff -ruN u-boot-2018.07/.checkpatch.conf u-boot-x4412/.checkpatch.conf
--- u-boot-2018.07/.checkpatch.conf	2018-07-09 22:24:14.000000000 +0800
+++ u-boot-x4412/.checkpatch.conf	1970-01-01 08:00:00.000000000 +0800
@@ -1,30 +0,0 @@
-# Not Linux, so don't expect a Linux tree.
---no-tree
-
-# Temporary for false positive in checkpatch
---ignore COMPLEX_MACRO
-
-# For CONFIG_SYS_I2C_NOPROBES
---ignore MULTISTATEMENT_MACRO_USE_DO_WHILE
-
-# For simple_strtoul
---ignore CONSIDER_KSTRTO
-
-# For min/max
---ignore MINMAX
-
-# enable more tests
---strict
-
-# Not Linux, so we don't recommend usleep_range() over udelay()
---ignore USLEEP_RANGE
-
-# Ignore networking block comment style
---ignore NETWORKING_BLOCK_COMMENT_STYLE
-
-# Ignore "WARNING: Prefer ether_addr_copy() over memcpy() if the Ethernet
-# addresses are __aligned(2)".
---ignore PREFER_ETHER_ADDR_COPY
-
-# A bit shorter of a description is OK with us.
---min-conf-desc-length=2
diff -ruN u-boot-2018.07/configs/x4412_defconfig u-boot-x4412/configs/x4412_defconfig
--- u-boot-2018.07/configs/x4412_defconfig	1970-01-01 08:00:00.000000000 +0800
+++ u-boot-x4412/configs/x4412_defconfig	2018-09-25 22:37:15.385711000 +0800
@@ -0,0 +1,59 @@
+CONFIG_ARM=y
+CONFIG_ARCH_EXYNOS=y
+CONFIG_SYS_TEXT_BASE=0x43e00000
+CONFIG_ARCH_EXYNOS4=y
+CONFIG_TARGET_ODROID=y
+CONFIG_DEFAULT_DEVICE_TREE="exynos4412-odroid"
+CONFIG_DISTRO_DEFAULTS=y
+# CONFIG_SYS_MALLOC_CLEAR_ON_INIT is not set
+CONFIG_FIT=y
+CONFIG_FIT_VERBOSE=y
+CONFIG_USE_BOOTARGS=y
+CONFIG_BOOTARGS="Please use defined boot"
+# CONFIG_USE_BOOTCOMMAND is not set
+CONFIG_SYS_CONSOLE_IS_IN_ENV=y
+CONFIG_SYS_CONSOLE_INFO_QUIET=y
+CONFIG_SYS_PROMPT="Odroid # "
+# CONFIG_CMD_XIMG is not set
+CONFIG_CMD_THOR_DOWNLOAD=y
+CONFIG_CMD_DFU=y
+CONFIG_CMD_GPIO=y
+CONFIG_CMD_GPT=y
+CONFIG_CMD_I2C=y
+CONFIG_CMD_MMC=y
+CONFIG_CMD_USB=y
+CONFIG_CMD_USB_MASS_STORAGE=y
+# CONFIG_CMD_NFS is not set
+CONFIG_CMD_CACHE=y
+# CONFIG_CMD_MISC is not set
+CONFIG_CMD_PMIC=y
+CONFIG_CMD_REGULATOR=y
+CONFIG_CMD_EXT4_WRITE=y
+CONFIG_OF_CONTROL=y
+CONFIG_ENV_VARS_UBOOT_RUNTIME_CONFIG=y
+CONFIG_DFU_MMC=y
+CONFIG_SYS_I2C_S3C24X0=y
+CONFIG_DM_MMC=y
+CONFIG_MMC_DW=y
+CONFIG_MMC_SDHCI=y
+CONFIG_MMC_SDHCI_SDMA=y
+CONFIG_MMC_SDHCI_S5P=y
+CONFIG_DM_PMIC=y
+CONFIG_DM_PMIC_MAX77686=y
+CONFIG_DM_REGULATOR=y
+CONFIG_DM_REGULATOR_MAX77686=y
+CONFIG_USB=y
+CONFIG_DM_USB=y
+CONFIG_USB_EHCI_HCD=y
+CONFIG_USB_STORAGE=y
+CONFIG_USB_GADGET=y
+CONFIG_USB_GADGET_MANUFACTURER="Samsung"
+CONFIG_USB_GADGET_VENDOR_NUM=0x04e8
+CONFIG_USB_GADGET_PRODUCT_NUM=0x6601
+CONFIG_USB_GADGET_DWC2_OTG=y
+CONFIG_USB_GADGET_DOWNLOAD=y
+CONFIG_USB_FUNCTION_THOR=y
+CONFIG_USB_HOST_ETHER=y
+CONFIG_USB_ETHER_SMSC95XX=y
+CONFIG_LIB_HW_RAND=y
+CONFIG_ERRNO_STR=y
diff -ruN u-boot-2018.07/include/configs/x4412.h u-boot-x4412/include/configs/x4412.h
--- u-boot-2018.07/include/configs/x4412.h	1970-01-01 08:00:00.000000000 +0800
+++ u-boot-x4412/include/configs/x4412.h	2018-09-25 22:37:15.641839000 +0800
@@ -0,0 +1,192 @@
+/* SPDX-License-Identifier: GPL-2.0+ */
+/*
+ * Copyright (C) 2014 Samsung Electronics
+ * Sanghee Kim <sh0130.kim@samsung.com>
+ * Piotr Wilczek <p.wilczek@samsung.com>
+ * Przemyslaw Marczak <p.marczak@samsung.com>
+ *
+ * Configuation settings for the Odroid-U3 (EXYNOS4412) board.
+ */
+
+#ifndef __CONFIG_ODROID_U3_H
+#define __CONFIG_ODROID_U3_H
+
+#include <configs/exynos4-common.h>
+
+#define CONFIG_SYS_L2CACHE_OFF
+#ifndef CONFIG_SYS_L2CACHE_OFF
+#define CONFIG_SYS_L2_PL310
+#define CONFIG_SYS_PL310_BASE	0x10502000
+#endif
+
+#define CONFIG_MACH_TYPE	4289
+
+#define CONFIG_NR_DRAM_BANKS	8
+#define CONFIG_SYS_SDRAM_BASE	0x40000000
+#define SDRAM_BANK_SIZE		(256 << 20)	/* 256 MB */
+#define PHYS_SDRAM_1		CONFIG_SYS_SDRAM_BASE
+/* Reserve the last 1 MiB for the secure firmware */
+#define CONFIG_SYS_MEM_TOP_HIDE		(1UL << 20UL)
+#define CONFIG_TZSW_RESERVED_DRAM_SIZE	CONFIG_SYS_MEM_TOP_HIDE
+
+/* memtest works on */
+#define CONFIG_SYS_MEMTEST_START	CONFIG_SYS_SDRAM_BASE
+#define CONFIG_SYS_MEMTEST_END		(CONFIG_SYS_SDRAM_BASE + 0x5E00000)
+#define CONFIG_SYS_LOAD_ADDR		(CONFIG_SYS_SDRAM_BASE + 0x3E00000)
+
+#include <linux/sizes.h>
+
+/* select serial console configuration */
+#define CONFIG_SERIAL1
+
+/* Console configuration */
+
+#define CONFIG_BOOTCOMMAND		"run autoboot"
+#define CONFIG_DEFAULT_CONSOLE		"ttySAC1,115200n8"
+
+#define CONFIG_SYS_INIT_SP_ADDR	(CONFIG_SYS_LOAD_ADDR \
+					- GENERATED_GBL_DATA_SIZE)
+
+#define CONFIG_SYS_MONITOR_BASE	0x00000000
+
+#define CONFIG_SYS_MMC_ENV_DEV		CONFIG_MMC_DEFAULT_DEV
+#define CONFIG_ENV_SIZE			4096
+#define CONFIG_ENV_OFFSET		(SZ_1K * 1280) /* 1.25 MiB offset */
+#define CONFIG_ENV_OVERWRITE
+
+/* Partitions name */
+#define PARTS_BOOT		"boot"
+#define PARTS_ROOT		"platform"
+
+#define CONFIG_DFU_ALT \
+	"uImage fat 0 1;" \
+	"zImage fat 0 1;" \
+	"Image.itb fat 0 1;" \
+	"uInitrd fat 0 1;" \
+	"exynos4412-odroidu3.dtb fat 0 1;" \
+	"exynos4412-odroidx2.dtb fat 0 1;" \
+	""PARTS_BOOT" part 0 1;" \
+	""PARTS_ROOT" part 0 2\0" \
+
+#define CONFIG_SET_DFU_ALT_INFO
+#define CONFIG_SET_DFU_ALT_BUF_LEN	(SZ_1K)
+
+#define CONFIG_DFU_ALT_BOOT_EMMC \
+	"u-boot raw 0x3e 0x800 mmcpart 1;" \
+	"bl1 raw 0x0 0x1e mmcpart 1;" \
+	"bl2 raw 0x1e 0x1d mmcpart 1;" \
+	"tzsw raw 0x83e 0x138 mmcpart 1\0"
+
+#define CONFIG_DFU_ALT_BOOT_SD \
+	"u-boot raw 0x3f 0x800;" \
+	"bl1 raw 0x1 0x1e;" \
+	"bl2 raw 0x1f 0x1d;" \
+	"tzsw raw 0x83f 0x138\0"
+
+/*
+ * Bootable media layout:
+ * dev:    SD   eMMC(part boot)
+ * BL1      1    0
+ * BL2     31   30
+ * UBOOT   63   62
+ * TZSW  2111 2110
+ * ENV   2560 2560(part user)
+ *
+ * MBR Primary partiions:
+ * Num Name   Size  Offset
+ * 1.  BOOT:  100MiB 2MiB
+ * 2.  ROOT:  -
+*/
+#define CONFIG_EXTRA_ENV_SETTINGS \
+	"loadbootscript=load mmc ${mmcbootdev}:${mmcbootpart} ${scriptaddr} " \
+		"boot.scr\0" \
+	"loadkernel=load mmc ${mmcbootdev}:${mmcbootpart} ${kerneladdr} " \
+		"${kernelname}\0" \
+	"loadinitrd=load mmc ${mmcbootdev}:${mmcbootpart} ${initrdaddr} " \
+		"${initrdname}\0" \
+	"loaddtb=load mmc ${mmcbootdev}:${mmcbootpart} ${fdtaddr} " \
+		"${fdtfile}\0" \
+	"check_ramdisk=" \
+		"if run loadinitrd; then " \
+			"setenv initrd_addr ${initrdaddr};" \
+		"else " \
+			"setenv initrd_addr -;" \
+		"fi;\0" \
+	"check_dtb=" \
+		"if run loaddtb; then " \
+			"setenv fdt_addr ${fdtaddr};" \
+		"else " \
+			"setenv fdt_addr;" \
+		"fi;\0" \
+	"kernel_args=" \
+		"setenv bootargs root=/dev/mmcblk${mmcrootdev}p${mmcrootpart}" \
+		" rootwait ${console} ${opts}\0" \
+	"boot_script=" \
+		"run loadbootscript;" \
+		"source ${scriptaddr}\0" \
+	"boot_fit=" \
+		"setenv kerneladdr 0x42000000;" \
+		"setenv kernelname Image.itb;" \
+		"run loadkernel;" \
+		"run kernel_args;" \
+		"bootm ${kerneladdr}#${boardname}\0" \
+	"boot_uimg=" \
+		"setenv kerneladdr 0x40007FC0;" \
+		"setenv kernelname uImage;" \
+		"run check_dtb;" \
+		"run check_ramdisk;" \
+		"run loadkernel;" \
+		"run kernel_args;" \
+		"bootm ${kerneladdr} ${initrd_addr} ${fdt_addr};\0" \
+	"boot_zimg=" \
+		"setenv kerneladdr 0x40007FC0;" \
+		"setenv kernelname zImage;" \
+		"run check_dtb;" \
+		"run check_ramdisk;" \
+		"run loadkernel;" \
+		"run kernel_args;" \
+		"bootz ${kerneladdr} ${initrd_addr} ${fdt_addr};\0" \
+	"autoboot=" \
+		"if test -e mmc 0 boot.scr; then; " \
+			"run boot_script; " \
+		"elif test -e mmc 0 Image.itb; then; " \
+			"run boot_fit;" \
+		"elif test -e mmc 0 zImage; then; " \
+			"run boot_zimg;" \
+		"elif test -e mmc 0 uImage; then; " \
+			"run boot_uimg;" \
+		"fi;\0" \
+	"console=" CONFIG_DEFAULT_CONSOLE "\0" \
+	"mmcbootdev=0\0" \
+	"mmcbootpart=1\0" \
+	"mmcrootdev=0\0" \
+	"mmcrootpart=2\0" \
+	"bootdelay=0\0" \
+	"dfu_alt_system="CONFIG_DFU_ALT \
+	"dfu_alt_info=Please reset the board\0" \
+	"consoleon=set console console=ttySAC1,115200n8; save; reset\0" \
+	"consoleoff=set console console=ram; save; reset\0" \
+	"initrdname=uInitrd\0" \
+	"initrdaddr=42000000\0" \
+	"scriptaddr=0x42000000\0" \
+	"fdtaddr=40800000\0"
+
+/* GPT */
+
+/* Security subsystem - enable hw_rand() */
+#define CONFIG_EXYNOS_ACE_SHA
+
+/* USB */
+#define CONFIG_USB_EHCI_EXYNOS
+
+/*
+ * Supported Odroid boards: X3, U3
+ * TODO: Add Odroid X support
+ */
+#define CONFIG_MISC_COMMON
+#define CONFIG_BOARD_TYPES
+#define CONFIG_MISC_INIT_R
+
+#undef CONFIG_REVISION_TAG
+
+#endif	/* __CONFIG_H */
Binary files u-boot-2018.07/tools/binman/test/descriptor.bin and u-boot-x4412/tools/binman/test/descriptor.bin differ
diff -ruN u-boot-2018.07/tools/patman/test/0000-cover-letter.patch u-boot-x4412/tools/patman/test/0000-cover-letter.patch
--- u-boot-2018.07/tools/patman/test/0000-cover-letter.patch	2018-07-09 22:24:14.000000000 +0800
+++ u-boot-x4412/tools/patman/test/0000-cover-letter.patch	1970-01-01 08:00:00.000000000 +0800
@@ -1,23 +0,0 @@
-From 5ab48490f03051875ab13d288a4bf32b507d76fd Mon Sep 17 00:00:00 2001
-From: Simon Glass <sjg@chromium.org>
-Date: Sat, 27 May 2017 20:52:11 -0600
-Subject: [RFC 0/2] *** SUBJECT HERE ***
-MIME-Version: 1.0
-Content-Type: text/plain; charset=UTF-8
-Content-Transfer-Encoding: 8bit
-
-*** BLURB HERE ***
-
-Simon Glass (2):
-  pci: Correct cast for sandbox
-  fdt: Correct cast for sandbox in fdtdec_setup_memory_size()
-
- cmd/pci.c                   | 3 ++-
- fs/fat/fat.c                | 1 +
- lib/efi_loader/efi_memory.c | 1 +
- lib/fdtdec.c                | 3 ++-
- 4 files changed, 6 insertions(+), 2 deletions(-)
-
--- 
-2.7.4
-
diff -ruN u-boot-2018.07/tools/patman/test/0001-pci-Correct-cast-for-sandbox.patch u-boot-x4412/tools/patman/test/0001-pci-Correct-cast-for-sandbox.patch
--- u-boot-2018.07/tools/patman/test/0001-pci-Correct-cast-for-sandbox.patch	2018-07-09 22:24:14.000000000 +0800
+++ u-boot-x4412/tools/patman/test/0001-pci-Correct-cast-for-sandbox.patch	1970-01-01 08:00:00.000000000 +0800
@@ -1,48 +0,0 @@
-From b9da5f937bd5ea4931ea17459bf79b2905d9594d Mon Sep 17 00:00:00 2001
-From: Simon Glass <sjg@chromium.org>
-Date: Sat, 15 Apr 2017 15:39:08 -0600
-Subject: [RFC 1/2] pci: Correct cast for sandbox
-MIME-Version: 1.0
-Content-Type: text/plain; charset=UTF-8
-Content-Transfer-Encoding: 8bit
-
-This gives a warning with some native compilers:
-
-cmd/pci.c:152:11: warning: format ‘%llx’ expects argument of type
-   ‘long long unsigned int’, but argument 3 has type
-   ‘u64 {aka long unsigned int}’ [-Wformat=]
-
-Fix it with a cast.
-
-Signed-off-by: Simon Glass <sjg@chromium.org>
-Series-notes:
-some notes
-about some things
-from the first commit
-END
-
-Commit-notes:
-Some notes about
-the first commit
-END
----
- cmd/pci.c | 3 ++-
- 1 file changed, 2 insertions(+), 1 deletion(-)
-
-diff --git a/cmd/pci.c b/cmd/pci.c
-index 41b4fff..fe27b4f 100644
---- a/cmd/pci.c
-+++ b/cmd/pci.c
-@@ -150,7 +150,8 @@ int pci_bar_show(struct udevice *dev)
- 		if ((!is_64 && size_low) || (is_64 && size)) {
- 			size = ~size + 1;
- 			printf(" %d   %#016llx  %#016llx  %d     %s   %s\n",
--			       bar_id, base, size, is_64 ? 64 : 32,
-+			       bar_id, (unsigned long long)base,
-+			       (unsigned long long)size, is_64 ? 64 : 32,
- 			       is_io ? "I/O" : "MEM",
- 			       prefetchable ? "Prefetchable" : "");
- 		}
--- 
-2.7.4
-
diff -ruN u-boot-2018.07/tools/patman/test/0002-fdt-Correct-cast-for-sandbox-in-fdtdec_setup_memory_.patch u-boot-x4412/tools/patman/test/0002-fdt-Correct-cast-for-sandbox-in-fdtdec_setup_memory_.patch
--- u-boot-2018.07/tools/patman/test/0002-fdt-Correct-cast-for-sandbox-in-fdtdec_setup_memory_.patch	2018-07-09 22:24:14.000000000 +0800
+++ u-boot-x4412/tools/patman/test/0002-fdt-Correct-cast-for-sandbox-in-fdtdec_setup_memory_.patch	1970-01-01 08:00:00.000000000 +0800
@@ -1,73 +0,0 @@
-From 5ab48490f03051875ab13d288a4bf32b507d76fd Mon Sep 17 00:00:00 2001
-From: Simon Glass <sjg@chromium.org>
-Date: Sat, 15 Apr 2017 15:39:08 -0600
-Subject: [RFC 2/2] fdt: Correct cast for sandbox in fdtdec_setup_memory_size()
-MIME-Version: 1.0
-Content-Type: text/plain; charset=UTF-8
-Content-Transfer-Encoding: 8bit
-
-This gives a warning with some native compilers:
-
-lib/fdtdec.c:1203:8: warning: format ‘%llx’ expects argument of type
-   ‘long long unsigned int’, but argument 3 has type
-   ‘long unsigned int’ [-Wformat=]
-
-Fix it with a cast.
-
-Signed-off-by: Simon Glass <sjg@chromium.org>
-Series-to: u-boot
-Series-prefix: RFC
-Series-cc: Stefan Brüns <stefan.bruens@rwth-aachen.de>
-Cover-letter-cc: Lord Mëlchett <clergy@palace.gov>
-Series-version: 3
-Patch-cc: fred
-Series-changes: 4
-- Some changes
-
-Cover-letter:
-test: A test patch series
-This is a test of how the cover
-leter
-works
-END
----
- fs/fat/fat.c                | 1 +
- lib/efi_loader/efi_memory.c | 1 +
- lib/fdtdec.c                | 3 ++-
- 3 files changed, 4 insertions(+), 1 deletion(-)
-
-diff --git a/fs/fat/fat.c b/fs/fat/fat.c
-index a71bad1..ba169dc 100644
---- a/fs/fat/fat.c
-+++ b/fs/fat/fat.c
-@@ -1,3 +1,4 @@
-+
- /*
-  * fat.c
-  *
-diff --git a/lib/efi_loader/efi_memory.c b/lib/efi_loader/efi_memory.c
-index db2ae19..05f75d1 100644
---- a/lib/efi_loader/efi_memory.c
-+++ b/lib/efi_loader/efi_memory.c
-@@ -1,3 +1,4 @@
-+
- /*
-  *  EFI application memory management
-  *
-diff --git a/lib/fdtdec.c b/lib/fdtdec.c
-index c072e54..942244f 100644
---- a/lib/fdtdec.c
-+++ b/lib/fdtdec.c
-@@ -1200,7 +1200,8 @@ int fdtdec_setup_memory_size(void)
- 	}
- 
- 	gd->ram_size = (phys_size_t)(res.end - res.start + 1);
--	debug("%s: Initial DRAM size %llx\n", __func__, (u64)gd->ram_size);
-+	debug("%s: Initial DRAM size %llx\n", __func__,
-+	      (unsigned long long)gd->ram_size);
- 
- 	return 0;
- }
--- 
-2.7.4
-
diff -ruN u-boot-2018.07/.travis.yml u-boot-x4412/.travis.yml
--- u-boot-2018.07/.travis.yml	2018-07-09 22:24:14.000000000 +0800
+++ u-boot-x4412/.travis.yml	1970-01-01 08:00:00.000000000 +0800
@@ -1,383 +0,0 @@
-# SPDX-License-Identifier: GPL-2.0+
-# Copyright Roger Meier <r.meier@siemens.com>
-
-# build U-Boot on Travis CI - https://travis-ci.org/
-
-sudo: required
-dist: trusty
-
-language: c
-
-addons:
-  apt:
-    packages:
-    - cppcheck
-    - sloccount
-    - sparse
-    - bc
-    - build-essential
-    - libsdl1.2-dev
-    - python
-    - python-virtualenv
-    - swig
-    - libpython-dev
-    - iasl
-    - grub-efi-ia32-bin
-    - rpm2cpio
-    - wget
-    - device-tree-compiler
-    - lzop
-
-before_install:
- - sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
- - sudo apt-get update -q
- - sudo apt-get install libisl15 -y
-
-install:
- # Clone uboot-test-hooks
- - git clone --depth=1 git://github.com/swarren/uboot-test-hooks.git /tmp/uboot-test-hooks
- - ln -s travis-ci /tmp/uboot-test-hooks/bin/`hostname`
- - ln -s travis-ci /tmp/uboot-test-hooks/py/`hostname`
- # prepare buildman environment
- - echo -e "[toolchain]\nroot = /usr" > ~/.buildman
- - echo -e "arc = /tmp/arc_gnu_2017.09_prebuilt_uclibc_le_archs_linux_install" >> ~/.buildman
- - echo -e "\n[toolchain-alias]\nsh = sh2\n" >> ~/.buildman
- - cat ~/.buildman
- - virtualenv /tmp/venv
- - . /tmp/venv/bin/activate
- - pip install pytest
- - grub-mkimage -o ~/grub_x86.efi -O i386-efi normal  echo lsefimmap lsefi lsefisystab efinet tftp minicmd
- - mkdir ~/grub2-arm
- - ( cd ~/grub2-arm; wget -O - http://download.opensuse.org/ports/armv7hl/distribution/leap/42.2/repo/oss/suse/armv7hl/grub2-arm-efi-2.02~beta2-87.1.armv7hl.rpm | rpm2cpio | cpio -di )
- - mkdir ~/grub2-arm64
- - ( cd ~/grub2-arm64; wget -O - http://download.opensuse.org/ports/aarch64/distribution/leap/42.2/repo/oss/suse/aarch64/grub2-arm64-efi-2.02~beta2-87.1.aarch64.rpm | rpm2cpio | cpio -di )
-
-env:
-  global:
-    - PATH=/tmp/qemu-install/bin:/tmp/uboot-test-hooks/bin:/usr/bin:/bin
-    - PYTHONPATH=/tmp/uboot-test-hooks/py/travis-ci
-    - BUILD_DIR=build
-    - HOSTCC="cc"
-    - HOSTCXX="c++"
-
-before_script:
-  # install toolchains based on TOOLCHAIN} variable
-  - if [[ "${TOOLCHAIN}" == *m68k* ]]; then ./tools/buildman/buildman --fetch-arch m68k ; fi
-  - if [[ "${TOOLCHAIN}" == *microblaze* ]]; then ./tools/buildman/buildman --fetch-arch microblaze ; fi
-  - if [[ "${TOOLCHAIN}" == *mips* ]]; then ./tools/buildman/buildman --fetch-arch mips ; fi
-  - if [[ "${TOOLCHAIN}" == *or32* ]]; then ./tools/buildman/buildman --fetch-arch or32 ; fi
-  - if [[ "${TOOLCHAIN}" == *sh* ]]; then ./tools/buildman/buildman --fetch-arch sh2 ; fi
-  - if [[ "${TOOLCHAIN}" == *x86_64* ]]; then
-      ./tools/buildman/buildman --fetch-arch x86_64;
-      echo -e "\n[toolchain-prefix]\nx86 = ${HOME}/.buildman-toolchains/gcc-7.3.0-nolibc/x86_64-linux/bin/x86_64-linux-" >> ~/.buildman;
-    fi
-  - if [[ "${TOOLCHAIN}" == arc ]]; then
-       wget https://github.com/foss-for-synopsys-dwc-arc-processors/toolchain/releases/download/arc-2017.09-release/arc_gnu_2017.09_prebuilt_uclibc_le_archs_linux_install.tar.gz &&
-       tar -C /tmp -xf arc_gnu_2017.09_prebuilt_uclibc_le_archs_linux_install.tar.gz;
-    fi
-  - if [[ "${TOOLCHAIN}" == *xtensa* ]]; then
-       wget https://github.com/foss-xtensa/toolchain/releases/download/2018.02/x86_64-2018.02-${TOOLCHAIN}.tar.gz &&
-       tar -C /tmp -xf x86_64-2018.02-${TOOLCHAIN}.tar.gz &&
-       echo -e "\n[toolchain-prefix]\nxtensa = /tmp/2018.02/${TOOLCHAIN}/bin/${TOOLCHAIN}-" >> ~/.buildman;
-    fi
-  # If TOOLCHAIN is unset, we're on some flavour of ARM.
-  - if [[ "${TOOLCHAIN}" == "" ]]; then
-       ./tools/buildman/buildman --fetch-arch arm &&
-       ./tools/buildman/buildman --fetch-arch aarch64;
-    fi
-  - if [[ "${TOOLCHAIN}" == "powerpc" ]]; then ./tools/buildman/buildman --fetch-arch powerpc; fi
-  - if [[ "${TOOLCHAIN}" == "riscv" ]]; then
-        wget https://github.com/andestech/prebuilt/releases/download/20180530/riscv64-unknown-linux-gnu.tar.gz &&
-        tar -C /tmp -xf riscv64-unknown-linux-gnu.tar.gz &&
-        echo -e "\n[toolchain-prefix]\nriscv = /tmp/riscv64-unknown-linux-gnu/bin/riscv64-unknown-linux-gnu-" >> ~/.buildman;
-    fi
-  - if [[ "${QEMU_TARGET}" != "" ]]; then
-       git clone git://git.qemu.org/qemu.git /tmp/qemu;
-       pushd /tmp/qemu;
-       git submodule update --init dtc &&
-       git checkout v2.8.0-rc3 &&
-       ./configure --prefix=/tmp/qemu-install --target-list=${QEMU_TARGET} &&
-       make -j4 all install;
-       popd;
-    fi
-
-script:
- # Comments must be outside the command strings below, or the Travis parser
- # will get confused.
- #
- # Exit code 129 means warnings only.
- - if [[ "${BUILDMAN}" != "" ]]; then
-     ret=0;
-     tools/buildman/buildman -P -E ${BUILDMAN} || ret=$?;
-     if [[ $ret -ne 0 && $ret -ne 129 ]]; then
-       tools/buildman/buildman -sdeP ${BUILDMAN};
-       exit $ret;
-     fi;
-   fi
- # "not a_test_which_does_not_exist" is a dummy -k parameter which will
- # never prevent any test from running. That way, we can always pass
- # "-k something" even when $TEST_PY_TEST_SPEC doesnt need a custom
- # value.
- - export UBOOT_TRAVIS_BUILD_DIR=`cd .. && pwd`/.bm-work/${TEST_PY_BD};
-   cp ~/grub_x86.efi $UBOOT_TRAVIS_BUILD_DIR/;
-   cp ~/grub2-arm/usr/lib/grub2/arm-efi/grub.efi $UBOOT_TRAVIS_BUILD_DIR/grub_arm.efi;
-   cp ~/grub2-arm64/usr/lib/grub2/arm64-efi/grub.efi $UBOOT_TRAVIS_BUILD_DIR/grub_arm64.efi;
-   if [[ "${TEST_PY_BD}" != "" ]]; then
-     ./test/py/test.py --bd ${TEST_PY_BD} ${TEST_PY_ID}
-       -k "${TEST_PY_TEST_SPEC:-not a_test_which_does_not_exist}"
-       --build-dir "$UBOOT_TRAVIS_BUILD_DIR";
-     ret=$?;
-     if [[ $ret -ne 0 ]]; then
-       exit $ret;
-     fi;
-   fi;
-   if [[ -n "${TEST_PY_TOOLS}" ]]; then
-     PYTHONPATH="${UBOOT_TRAVIS_BUILD_DIR}/scripts/dtc/pylibfdt"
-     PATH="${UBOOT_TRAVIS_BUILD_DIR}/scripts/dtc:${PATH}"
-     ./tools/binman/binman -t &&
-     ./tools/patman/patman --test &&
-     ./tools/buildman/buildman -t &&
-     PYTHONPATH="${UBOOT_TRAVIS_BUILD_DIR}/scripts/dtc/pylibfdt"
-     PATH="${UBOOT_TRAVIS_BUILD_DIR}/scripts/dtc:${PATH}"
-     ./tools/dtoc/dtoc -t;
-   fi
-
-matrix:
-  include:
-  # we need to build by vendor due to 50min time limit for builds
-  # each env setting here is a dedicated build
-    - env:
-        - BUILDMAN="arc"
-          TOOLCHAIN="arc"
-    - env:
-        - BUILDMAN="arm11 arm7 arm920t arm946es"
-    - env:
-        - JOB="arm926ejs"
-          BUILDMAN="arm926ejs -x mx,siemens,atmel"
-    - env:
-        - BUILDMAN="atmel"
-    - env:
-          BUILDMAN="boundary engicam toradex"
-    - env:
-        - JOB="Freescale ARM32"
-          BUILDMAN="freescale -x powerpc,m68k,aarch64"
-    - env:
-        - JOB="Freescale AArch64"
-          BUILDMAN="freescale&aarch64"
-    - env:
-        - JOB="i.MX6 (non-Freescale)"
-          BUILDMAN="mx6 -x freescale,toradex,boundary,engicam"
-    - env:
-        - JOB="i.MX (non-Freescale, non-i.MX6)"
-          BUILDMAN="mx -x freescale,mx6,toradex"
-    - env:
-        - BUILDMAN="k2"
-    - env:
-        - BUILDMAN="samsung socfpga"
-    - env:
-        - BUILDMAN="sun4i"
-    - env:
-        - BUILDMAN="sun5i"
-    - env:
-        - BUILDMAN="sun6i"
-    - env:
-        - BUILDMAN="sun7i"
-    - env:
-        - BUILDMAN="sun8i"
-    - env:
-        - BUILDMAN="sun9i"
-    - env:
-        - BUILDMAN="sun50i"
-    - env:
-        - JOB="Catch-all ARM"
-          BUILDMAN="arm -x arm11,arm7,arm9,aarch64,atmel,freescale,kirkwood,mvebu,siemens,tegra,uniphier,mx,samsung,sunxi,am33xx,omap,pxa,rockchip,toradex,socfpga,k2,xilinx"
-    - env:
-        - BUILDMAN="sandbox x86"
-          TOOLCHAIN="x86_64"
-    - env:
-        - BUILDMAN="kirkwood"
-    - env:
-        - BUILDMAN="mvebu"
-    - env:
-        - JOB="PXA"
-        - BUILDMAN="pxa -x toradex"
-    - env:
-        - BUILDMAN="m68k"
-          TOOLCHAIN="m68k"
-    - env:
-        - BUILDMAN="microblaze"
-          TOOLCHAIN="microblaze"
-    - env:
-        - BUILDMAN="mips"
-          TOOLCHAIN="mips"
-    - env:
-        - JOB="Non-Freescale PowerPC"
-          BUILDMAN="powerpc -x freescale"
-          TOOLCHAIN="powerpc"
-    - env:
-        - BUILDMAN="mpc85xx&freescale -x t208xrdb -x t4qds -x t102* -x p1_p2_rdb_pc -x p1010rdb -x corenet_ds -x b4860qds -x bsc91*"
-          TOOLCHAIN="powerpc"
-    - env:
-        - BUILDMAN="t208xrdb corenet_ds"
-          TOOLCHAIN="powerpc"
-    - env:
-        - BUILDMAN="t4qds b4860qds mpc83xx&freescale mpc86xx&freescale"
-          TOOLCHAIN="powerpc"
-    - env:
-        - BUILDMAN="t102*"
-          TOOLCHAIN="powerpc"
-    - env:
-        - BUILDMAN="p1_p2_rdb_pc"
-          TOOLCHAIN="powerpc"
-    - env:
-        - BUILDMAN="p1010rdb bsc91"
-          TOOLCHAIN="powerpc"
-    - env:
-        - BUILDMAN="siemens"
-    - env:
-        - JOB="tegra"
-          BUILDMAN="tegra -x toradex"
-    - env:
-        - JOB="am33xx"
-          BUILDMAN="am33xx -x siemens"
-    - env:
-        - BUILDMAN="omap"
-    - env:
-        - BUILDMAN="uniphier"
-    - env:
-        - JOB="Catch-all AArch64"
-          BUILDMAN="aarch64 -x tegra,freescale,mvebu,uniphier,sunxi,samsung,rockchip,xilinx"
-    - env:
-        - BUILDMAN="rockchip"
-    - env:
-        - JOB="sh"
-          BUILDMAN="sh -x arm"
-          TOOLCHAIN="sh"
-    - env:
-        - JOB="Xilinx (ARM)"
-          BUILDMAN="xilinx -x microblaze"
-    - env:
-        - BUILDMAN="xtensa"
-          TOOLCHAIN="xtensa-dc233c-elf"
-    - env:
-        - BUILDMAN="riscv"
-          TOOLCHAIN="riscv"
-
-    # QA jobs for code analytics
-    # static code analysis with cppcheck (we can add --enable=all later)
-    - env:
-        - JOB="cppcheck"
-      script:
-        - cppcheck --force --quiet --inline-suppr .
-    # search for TODO within source tree
-    - env:
-        - JOB="grep TODO"
-      script:
-        - grep -r TODO .
-    # search for FIXME within source tree
-    - env:
-        - JOB="grep FIXME HACK"
-      script:
-        - grep -r FIXME .
-    # search for HACK within source tree and ignore HACKKIT board
-      script:
-        - grep -r HACK . | grep -v HACKKIT
-    # some statistics about the code base
-    - env:
-        - JOB="sloccount"
-      script:
-        - sloccount .
-
-    # test/py
-    - env:
-        - TEST_PY_BD="sandbox"
-          BUILDMAN="^sandbox$"
-          TOOLCHAIN="x86_64"
-    - env:
-        - TEST_PY_BD="sandbox_spl"
-          TEST_PY_TEST_SPEC="test_ofplatdata"
-          BUILDMAN="^sandbox$"
-          TOOLCHAIN="x86_64"
-          TEST_PY_TOOLS="yes"
-    - env:
-        - TEST_PY_BD="sandbox_flattree"
-          BUILDMAN="^sandbox_flattree$"
-          TOOLCHAIN="x86_64"
-    - env:
-        - TEST_PY_BD="vexpress_ca15_tc2"
-          TEST_PY_ID="--id qemu"
-          QEMU_TARGET="arm-softmmu"
-          BUILDMAN="^vexpress_ca15_tc2$"
-    - env:
-        - TEST_PY_BD="vexpress_ca9x4"
-          TEST_PY_ID="--id qemu"
-          QEMU_TARGET="arm-softmmu"
-          BUILDMAN="^vexpress_ca9x4$"
-    - env:
-        - TEST_PY_BD="integratorcp_cm926ejs"
-          TEST_PY_TEST_SPEC="not sleep"
-          TEST_PY_ID="--id qemu"
-          QEMU_TARGET="arm-softmmu"
-          BUILDMAN="^integratorcp_cm926ejs$"
-    - env:
-        - TEST_PY_BD="qemu_arm"
-          TEST_PY_TEST_SPEC="not sleep"
-          QEMU_TARGET="arm-softmmu"
-          BUILDMAN="^qemu_arm$"
-    - env:
-        - TEST_PY_BD="qemu_arm64"
-          TEST_PY_TEST_SPEC="not sleep"
-          QEMU_TARGET="aarch64-softmmu"
-          BUILDMAN="^qemu_arm64$"
-    - env:
-        - TEST_PY_BD="qemu_mips"
-          TEST_PY_TEST_SPEC="not sleep"
-          QEMU_TARGET="mips-softmmu"
-          BUILDMAN="^qemu_mips$"
-          TOOLCHAIN="mips"
-    - env:
-        - TEST_PY_BD="qemu_mipsel"
-          TEST_PY_TEST_SPEC="not sleep"
-          QEMU_TARGET="mipsel-softmmu"
-          BUILDMAN="^qemu_mipsel$"
-          TOOLCHAIN="mips"
-    - env:
-        - TEST_PY_BD="qemu_mips64"
-          TEST_PY_TEST_SPEC="not sleep"
-          QEMU_TARGET="mips64-softmmu"
-          BUILDMAN="^qemu_mips64$"
-          TOOLCHAIN="mips"
-    - env:
-        - TEST_PY_BD="qemu_mips64el"
-          TEST_PY_TEST_SPEC="not sleep"
-          QEMU_TARGET="mips64el-softmmu"
-          BUILDMAN="^qemu_mips64el$"
-          TOOLCHAIN="mips"
-    - env:
-        - TEST_PY_BD="qemu-ppce500"
-          TEST_PY_TEST_SPEC="not sleep"
-          QEMU_TARGET="ppc-softmmu"
-          BUILDMAN="^qemu-ppce500$"
-          TOOLCHAIN="powerpc"
-    - env:
-        - TEST_PY_BD="qemu-x86"
-          TEST_PY_TEST_SPEC="not sleep"
-          QEMU_TARGET="i386-softmmu"
-          BUILDMAN="^qemu-x86$"
-          TOOLCHAIN="x86_64"
-          BUILD_ROM="yes"
-    - env:
-        - TEST_PY_BD="zynq_zc702"
-          TEST_PY_TEST_SPEC="not sleep"
-          QEMU_TARGET="arm-softmmu"
-          TEST_PY_ID="--id qemu"
-          BUILDMAN="^zynq_zc702$"
-    - env:
-        - TEST_PY_BD="xtfpga"
-          TEST_PY_TEST_SPEC="not sleep"
-          QEMU_TARGET="xtensa-softmmu"
-          TEST_PY_ID="--id qemu"
-          BUILDMAN="^xtfpga$"
-          TOOLCHAIN="xtensa-dc233c-elf"
-
-# TODO make it perfect ;-r
